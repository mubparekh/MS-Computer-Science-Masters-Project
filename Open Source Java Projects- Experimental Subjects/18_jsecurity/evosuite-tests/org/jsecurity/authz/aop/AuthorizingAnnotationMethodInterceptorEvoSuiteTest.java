/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.authz.aop;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import org.jsecurity.aop.MethodInvocation;
import org.jsecurity.authz.aop.PermissionAnnotationMethodInterceptor;

public class AuthorizingAnnotationMethodInterceptorEvoSuiteTest {


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 org.jsecurity.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(Lorg/jsecurity/aop/MethodInvocation;)V: root-Branch
   * 2 org.jsecurity.authz.aop.AuthorizingAnnotationMethodInterceptor.invoke(Lorg/jsecurity/aop/MethodInvocation;)Ljava/lang/Object;: root-Branch
   * 3 org.jsecurity.authz.aop.AuthorizingAnnotationMethodInterceptor.<init>(Lorg/jsecurity/authz/aop/AuthorizingAnnotationHandler;)V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      PermissionAnnotationMethodInterceptor permissionAnnotationMethodInterceptor0 = new PermissionAnnotationMethodInterceptor();
      try {
        permissionAnnotationMethodInterceptor0.invoke((MethodInvocation) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * method argument cannot be null
         */
      }
  }
}
