/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.authc.credential;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import org.jsecurity.authc.credential.Sha1CredentialsMatcher;
import org.jsecurity.crypto.hash.Sha1Hash;

public class Sha1CredentialsMatcherEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 org.jsecurity.authc.credential.Sha1CredentialsMatcher.hashProvidedCredentials(Ljava/lang/Object;Ljava/lang/Object;I)Lorg/jsecurity/crypto/hash/Hash;: root-Branch
   * 2 org.jsecurity.authc.credential.Sha1CredentialsMatcher.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      Sha1CredentialsMatcher sha1CredentialsMatcher0 = new Sha1CredentialsMatcher();
      Sha1Hash sha1Hash0 = (Sha1Hash)sha1CredentialsMatcher0.hashProvidedCredentials((Object) "[]", (Object) null, (int) (byte)0);
      assertEquals("97d170e1550eee4afc0af065b78cda302a97674c", sha1Hash0.toString());
      assertNotNull(sha1Hash0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 org.jsecurity.authc.credential.Sha1CredentialsMatcher.newHashInstance()Lorg/jsecurity/crypto/hash/AbstractHash;: root-Branch
   * 2 org.jsecurity.authc.credential.Sha1CredentialsMatcher.<init>()V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      Sha1CredentialsMatcher sha1CredentialsMatcher0 = new Sha1CredentialsMatcher();
      Sha1Hash sha1Hash0 = (Sha1Hash)sha1CredentialsMatcher0.newHashInstance();
      assertNotNull(sha1Hash0);
  }
}
