/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.authc.pam;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import java.net.Inet4Address;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.Set;
import org.jsecurity.authc.AuthenticationException;
import org.jsecurity.authc.AuthenticationInfo;
import org.jsecurity.authc.AuthenticationToken;
import org.jsecurity.authc.SimpleAccount;
import org.jsecurity.authc.SimpleAuthenticationInfo;
import org.jsecurity.authc.UnknownAccountException;
import org.jsecurity.authc.UsernamePasswordToken;
import org.jsecurity.authc.pam.AllSuccessfulModularAuthenticationStrategy;
import org.jsecurity.authc.pam.UnsupportedTokenException;
import org.jsecurity.authz.Permission;
import org.jsecurity.realm.Realm;
import org.jsecurity.realm.SimpleAccountRealm;

public class AllSuccessfulModularAuthenticationStrategyEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 org.jsecurity.authc.pam.AllSuccessfulModularAuthenticationStrategy.beforeAttempt(Lorg/jsecurity/realm/Realm;Lorg/jsecurity/authc/AuthenticationToken;Lorg/jsecurity/authc/AuthenticationInfo;)Lorg/jsecurity/authc/AuthenticationInfo;: I5 Branch 1 IFNE L53 - true
   * 2 org.jsecurity.authc.pam.AllSuccessfulModularAuthenticationStrategy.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      AllSuccessfulModularAuthenticationStrategy allSuccessfulModularAuthenticationStrategy0 = new AllSuccessfulModularAuthenticationStrategy();
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm((String) null);
      char[] charArray0 = new char[6];
      Inet4Address inet4Address0 = (Inet4Address)InetAddress.getByName((String) null);
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken((String) null, charArray0, true, (InetAddress) inet4Address0);
      SimpleAuthenticationInfo simpleAuthenticationInfo0 = new SimpleAuthenticationInfo();
      SimpleAuthenticationInfo simpleAuthenticationInfo1 = (SimpleAuthenticationInfo)allSuccessfulModularAuthenticationStrategy0.beforeAttempt((Realm) simpleAccountRealm0, (AuthenticationToken) usernamePasswordToken0, (AuthenticationInfo) simpleAuthenticationInfo0);
      assertSame(simpleAuthenticationInfo1, simpleAuthenticationInfo0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.jsecurity.authc.pam.AllSuccessfulModularAuthenticationStrategy.beforeAttempt(Lorg/jsecurity/realm/Realm;Lorg/jsecurity/authc/AuthenticationToken;Lorg/jsecurity/authc/AuthenticationInfo;)Lorg/jsecurity/authc/AuthenticationInfo;: I5 Branch 1 IFNE L53 - false
   */
  @Test
  public void test1()  throws Throwable  {
      AllSuccessfulModularAuthenticationStrategy allSuccessfulModularAuthenticationStrategy0 = new AllSuccessfulModularAuthenticationStrategy();
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm((String) null);
      SimpleAccount simpleAccount0 = new SimpleAccount((Object) "localhost/127.0.0.1", (Object) "localhost/127.0.0.1", "localhost/127.0.0.1", (Set<String>) null, (Set<Permission>) null);
      try {
        allSuccessfulModularAuthenticationStrategy0.beforeAttempt((Realm) simpleAccountRealm0, (AuthenticationToken) null, (AuthenticationInfo) simpleAccount0);
        fail("Expecting exception: UnsupportedTokenException");
      } catch(UnsupportedTokenException e) {
        /*
         * Realm [org.jsecurity.realm.SimpleAccountRealm@1f3c08b5] of type [org.jsecurity.realm.SimpleAccountRealm] does not support  the submitted AuthenticationToken [null].  The [org.jsecurity.authc.pam.AllSuccessfulModularAuthenticationStrategy] implementation requires all configured realm(s) to support and be able to process the submitted AuthenticationToken.
         */
      }
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 org.jsecurity.authc.pam.AllSuccessfulModularAuthenticationStrategy.afterAttempt(Lorg/jsecurity/realm/Realm;Lorg/jsecurity/authc/AuthenticationToken;Lorg/jsecurity/authc/AuthenticationInfo;Lorg/jsecurity/authc/AuthenticationInfo;Ljava/lang/Throwable;)Lorg/jsecurity/authc/AuthenticationInfo;: I3 Branch 2 IFNULL L76 - true
   * 2 org.jsecurity.authc.pam.AllSuccessfulModularAuthenticationStrategy.afterAttempt(Lorg/jsecurity/realm/Realm;Lorg/jsecurity/authc/AuthenticationToken;Lorg/jsecurity/authc/AuthenticationInfo;Lorg/jsecurity/authc/AuthenticationInfo;Ljava/lang/Throwable;)Lorg/jsecurity/authc/AuthenticationInfo;: I46 Branch 4 IFNONNULL L87 - true
   * 3 org.jsecurity.authc.pam.AllSuccessfulModularAuthenticationStrategy.afterAttempt(Lorg/jsecurity/realm/Realm;Lorg/jsecurity/authc/AuthenticationToken;Lorg/jsecurity/authc/AuthenticationInfo;Lorg/jsecurity/authc/AuthenticationInfo;Ljava/lang/Throwable;)Lorg/jsecurity/authc/AuthenticationInfo;: I87 Branch 5 IFEQ L97 - true
   */
  @Test
  public void test2()  throws Throwable  {
      AllSuccessfulModularAuthenticationStrategy allSuccessfulModularAuthenticationStrategy0 = new AllSuccessfulModularAuthenticationStrategy();
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm((String) null);
      char[] charArray0 = new char[6];
      Inet4Address inet4Address0 = (Inet4Address)InetAddress.getByName((String) null);
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken((String) null, charArray0, true, (InetAddress) inet4Address0);
      SimpleAuthenticationInfo simpleAuthenticationInfo0 = new SimpleAuthenticationInfo();
      SimpleAuthenticationInfo simpleAuthenticationInfo1 = (SimpleAuthenticationInfo)allSuccessfulModularAuthenticationStrategy0.afterAttempt((Realm) simpleAccountRealm0, (AuthenticationToken) usernamePasswordToken0, (AuthenticationInfo) simpleAuthenticationInfo0, (AuthenticationInfo) simpleAuthenticationInfo0, (Throwable) null);
      assertSame(simpleAuthenticationInfo0, simpleAuthenticationInfo1);
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 org.jsecurity.authc.pam.AllSuccessfulModularAuthenticationStrategy.afterAttempt(Lorg/jsecurity/realm/Realm;Lorg/jsecurity/authc/AuthenticationToken;Lorg/jsecurity/authc/AuthenticationInfo;Lorg/jsecurity/authc/AuthenticationInfo;Ljava/lang/Throwable;)Lorg/jsecurity/authc/AuthenticationInfo;: I46 Branch 4 IFNONNULL L87 - false
   * 2 org.jsecurity.authc.pam.AllSuccessfulModularAuthenticationStrategy.<init>()V: root-Branch
   * 3 org.jsecurity.authc.pam.AllSuccessfulModularAuthenticationStrategy.afterAttempt(Lorg/jsecurity/realm/Realm;Lorg/jsecurity/authc/AuthenticationToken;Lorg/jsecurity/authc/AuthenticationInfo;Lorg/jsecurity/authc/AuthenticationInfo;Ljava/lang/Throwable;)Lorg/jsecurity/authc/AuthenticationInfo;: I3 Branch 2 IFNULL L76 - true
   */
  @Test
  public void test3()  throws Throwable  {
      AllSuccessfulModularAuthenticationStrategy allSuccessfulModularAuthenticationStrategy0 = new AllSuccessfulModularAuthenticationStrategy();
      try {
        allSuccessfulModularAuthenticationStrategy0.afterAttempt((Realm) null, (AuthenticationToken) null, (AuthenticationInfo) null, (AuthenticationInfo) null, (Throwable) null);
        fail("Expecting exception: UnknownAccountException");
      } catch(UnknownAccountException e) {
        /*
         * Realm [null] could not find any associated account data for the submitted AuthenticationToken [null].  The [org.jsecurity.authc.pam.AllSuccessfulModularAuthenticationStrategy] implementation requires all configured realm(s) to acquire valid account data for a submitted token during the log-in process.
         */
      }
  }
}
