/*
 * This file was automatically generated by EvoSuite
 */

package net.sf.jniinchi;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import net.sf.jniinchi.INCHI_PARITY;

public class INCHI_PARITYEvoSuiteTest {


  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 net.sf.jniinchi.INCHI_PARITY.getValue(I)Lnet/sf/jniinchi/INCHI_PARITY;: I3 Branch 1 TABLESWITCH L72 Case 0 - false
   * 2 net.sf.jniinchi.INCHI_PARITY.getValue(I)Lnet/sf/jniinchi/INCHI_PARITY;: I3 Branch 5 TABLESWITCH L72 Case 4 - true
   */
  @Test
  public void test2()  throws Throwable  {
      INCHI_PARITY iNCHI_PARITY0 = INCHI_PARITY.getValue(4);
      assertEquals(INCHI_PARITY.UNDEFINED, iNCHI_PARITY0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.INCHI_PARITY.getValue(I)Lnet/sf/jniinchi/INCHI_PARITY;: I3 Branch 2 TABLESWITCH L72 Case 1 - true
   */
  @Test
  public void test3()  throws Throwable  {
      INCHI_PARITY iNCHI_PARITY0 = INCHI_PARITY.getValue(1);
      assertEquals(INCHI_PARITY.ODD, iNCHI_PARITY0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.INCHI_PARITY.getValue(I)Lnet/sf/jniinchi/INCHI_PARITY;: I3 Branch 3 TABLESWITCH L72 Case 2 - true
   */
  @Test
  public void test4()  throws Throwable  {
      INCHI_PARITY iNCHI_PARITY0 = INCHI_PARITY.getValue(2);
      assertEquals(INCHI_PARITY.EVEN, iNCHI_PARITY0);
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 net.sf.jniinchi.INCHI_PARITY.getValue(I)Lnet/sf/jniinchi/INCHI_PARITY;: I3 Branch 4 TABLESWITCH L72 Case 3 - true
   * 2 net.sf.jniinchi.INCHI_PARITY.getValue(I)Lnet/sf/jniinchi/INCHI_PARITY;: I3 Branch 6 TABLESWITCH L72 Default-Case - false
   */
  @Test
  public void test5()  throws Throwable  {
      INCHI_PARITY iNCHI_PARITY0 = INCHI_PARITY.getValue(3);
      assertEquals(INCHI_PARITY.UNKNOWN, iNCHI_PARITY0);
  }
}
