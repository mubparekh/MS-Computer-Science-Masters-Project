/*
 * This file was automatically generated by EvoSuite
 */

package net.sf.jniinchi;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import net.sf.jniinchi.INCHI_KEY;

public class INCHI_KEYEvoSuiteTest {


  //Test case number: 0
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.INCHI_KEY.getIndx()I: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      INCHI_KEY iNCHI_KEY0 = INCHI_KEY.EMPTY_INPUT;
      int int0 = iNCHI_KEY0.getIndx();
      assertEquals(2, int0);
  }

  //Test case number: 1
  /*
   * 23 covered goals:
   * 1 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 1 TABLESWITCH L71 Case 0 - true
   * 2 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 2 TABLESWITCH L71 Case 1 - false
   * 3 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 3 TABLESWITCH L71 Case 2 - false
   * 4 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 4 TABLESWITCH L71 Case 3 - false
   * 5 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 5 TABLESWITCH L71 Case 4 - false
   * 6 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 6 TABLESWITCH L71 Case 5 - false
   * 7 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 7 TABLESWITCH L71 Case 6 - false
   * 8 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 8 TABLESWITCH L71 Case 7 - false
   * 9 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 9 TABLESWITCH L71 Case 8 - false
   * 10 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 10 TABLESWITCH L71 Case 9 - false
   * 11 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 11 TABLESWITCH L71 Case 10 - false
   * 12 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 12 TABLESWITCH L71 Case 11 - false
   * 13 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 13 TABLESWITCH L71 Case 12 - false
   * 14 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 14 TABLESWITCH L71 Case 13 - false
   * 15 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 15 TABLESWITCH L71 Case 14 - false
   * 16 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 16 TABLESWITCH L71 Case 15 - false
   * 17 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 17 TABLESWITCH L71 Case 16 - false
   * 18 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 18 TABLESWITCH L71 Case 17 - false
   * 19 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 19 TABLESWITCH L71 Case 18 - false
   * 20 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 20 TABLESWITCH L71 Case 19 - false
   * 21 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 21 TABLESWITCH L71 Case 20 - false
   * 22 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 22 TABLESWITCH L71 Case 21 - false
   * 23 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 23 TABLESWITCH L71 Default-Case - false
   */
  @Test
  public void test1()  throws Throwable  {
      INCHI_KEY iNCHI_KEY0 = INCHI_KEY.getValue(0);
      assertEquals(INCHI_KEY.OK, iNCHI_KEY0);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 1 TABLESWITCH L71 Case 0 - false
   * 2 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 3 TABLESWITCH L71 Case 2 - true
   */
  @Test
  public void test2()  throws Throwable  {
      INCHI_KEY iNCHI_KEY0 = INCHI_KEY.getValue(2);
      assertEquals(INCHI_KEY.EMPTY_INPUT, iNCHI_KEY0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 2 TABLESWITCH L71 Case 1 - true
   */
  @Test
  public void test3()  throws Throwable  {
      INCHI_KEY iNCHI_KEY0 = INCHI_KEY.getValue(1);
      assertEquals(INCHI_KEY.UNKNOWN_ERROR, iNCHI_KEY0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 4 TABLESWITCH L71 Case 3 - true
   */
  @Test
  public void test4()  throws Throwable  {
      INCHI_KEY iNCHI_KEY0 = INCHI_KEY.getValue(3);
      assertEquals(INCHI_KEY.INVALID_INCHI_PREFIX, iNCHI_KEY0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 5 TABLESWITCH L71 Case 4 - true
   */
  @Test
  public void test5()  throws Throwable  {
      INCHI_KEY iNCHI_KEY0 = INCHI_KEY.getValue(4);
      assertEquals(INCHI_KEY.NOT_ENOUGH_MEMORY, iNCHI_KEY0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 7 TABLESWITCH L71 Case 6 - true
   */
  @Test
  public void test6()  throws Throwable  {
      INCHI_KEY.getValue(6);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 8 TABLESWITCH L71 Case 7 - true
   */
  @Test
  public void test7()  throws Throwable  {
      INCHI_KEY.getValue(7);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 11 TABLESWITCH L71 Case 10 - true
   */
  @Test
  public void test8()  throws Throwable  {
      INCHI_KEY.getValue(10);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 12 TABLESWITCH L71 Case 11 - true
   */
  @Test
  public void test9()  throws Throwable  {
      INCHI_KEY.getValue(11);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 15 TABLESWITCH L71 Case 14 - true
   */
  @Test
  public void test10()  throws Throwable  {
      INCHI_KEY.getValue(14);
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 16 TABLESWITCH L71 Case 15 - true
   */
  @Test
  public void test11()  throws Throwable  {
      INCHI_KEY.getValue(15);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 17 TABLESWITCH L71 Case 16 - true
   */
  @Test
  public void test12()  throws Throwable  {
      INCHI_KEY.getValue(16);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 18 TABLESWITCH L71 Case 17 - true
   */
  @Test
  public void test13()  throws Throwable  {
      INCHI_KEY.getValue(17);
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 19 TABLESWITCH L71 Case 18 - true
   */
  @Test
  public void test14()  throws Throwable  {
      INCHI_KEY.getValue(18);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 21 TABLESWITCH L71 Case 20 - true
   */
  @Test
  public void test15()  throws Throwable  {
      INCHI_KEY iNCHI_KEY0 = INCHI_KEY.getValue(20);
      assertEquals(INCHI_KEY.INVALID_INCHI, iNCHI_KEY0);
  }

  //Test case number: 16
  /*
   * 2 covered goals:
   * 1 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 22 TABLESWITCH L71 Case 21 - true
   * 2 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 23 TABLESWITCH L71 Default-Case - false
   */
  @Test
  public void test16()  throws Throwable  {
      INCHI_KEY iNCHI_KEY0 = INCHI_KEY.getValue(21);
      assertEquals(INCHI_KEY.INVALID_STD_INCHI, iNCHI_KEY0);
  }

  //Test case number: 17
  /*
   * 23 covered goals:
   * 1 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 23 TABLESWITCH L71 Default-Case - true
   * 2 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 1 TABLESWITCH L71 Case 0 - false
   * 3 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 2 TABLESWITCH L71 Case 1 - false
   * 4 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 3 TABLESWITCH L71 Case 2 - false
   * 5 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 4 TABLESWITCH L71 Case 3 - false
   * 6 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 5 TABLESWITCH L71 Case 4 - false
   * 7 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 6 TABLESWITCH L71 Case 5 - false
   * 8 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 7 TABLESWITCH L71 Case 6 - false
   * 9 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 8 TABLESWITCH L71 Case 7 - false
   * 10 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 9 TABLESWITCH L71 Case 8 - false
   * 11 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 10 TABLESWITCH L71 Case 9 - false
   * 12 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 11 TABLESWITCH L71 Case 10 - false
   * 13 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 12 TABLESWITCH L71 Case 11 - false
   * 14 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 13 TABLESWITCH L71 Case 12 - false
   * 15 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 14 TABLESWITCH L71 Case 13 - false
   * 16 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 15 TABLESWITCH L71 Case 14 - false
   * 17 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 16 TABLESWITCH L71 Case 15 - false
   * 18 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 17 TABLESWITCH L71 Case 16 - false
   * 19 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 18 TABLESWITCH L71 Case 17 - false
   * 20 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 19 TABLESWITCH L71 Case 18 - false
   * 21 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 20 TABLESWITCH L71 Case 19 - false
   * 22 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 21 TABLESWITCH L71 Case 20 - false
   * 23 net.sf.jniinchi.INCHI_KEY.getValue(I)Lnet/sf/jniinchi/INCHI_KEY;: I3 Branch 22 TABLESWITCH L71 Case 21 - false
   */
  @Test
  public void test17()  throws Throwable  {
      INCHI_KEY.getValue((-1025));
  }
}
