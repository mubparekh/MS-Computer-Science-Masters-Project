/*
 * This file was automatically generated by EvoSuite
 */

package nu.staldal.lagoon.filestorage;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.net.MalformedURLException;
import nu.staldal.lagoon.core.LagoonContext;
import nu.staldal.lagoon.filestorage.SSHFileStorage;

public class SSHFileStorageEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 nu.staldal.lagoon.filestorage.SSHFileStorage.isReentrant()Z: root-Branch
   * 2 nu.staldal.lagoon.filestorage.SSHFileStorage.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      SSHFileStorage sSHFileStorage0 = new SSHFileStorage();
      boolean boolean0 = sSHFileStorage0.isReentrant();
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 5 covered goals:
   * 1 nu.staldal.lagoon.filestorage.SSHFileStorage.deleteFile(Ljava/lang/String;)V: root-Branch
   * 2 nu.staldal.lagoon.filestorage.SSHFileStorage.runSSH([Ljava/lang/String;)Ljava/lang/Process;: I6 Branch 1 IFLE L69 - true
   * 3 nu.staldal.lagoon.filestorage.SSHFileStorage.runSSH([Ljava/lang/String;)Ljava/lang/Process;: I56 Branch 2 IFLE L77 - true
   * 4 nu.staldal.lagoon.filestorage.SSHFileStorage.runSSH([Ljava/lang/String;)Ljava/lang/Process;: I76 Branch 3 IFLE L82 - true
   * 5 nu.staldal.lagoon.filestorage.SSHFileStorage.runSSH([Ljava/lang/String;)Ljava/lang/Process;: I92 Branch 4 IFLE L84 - true
   */
  @Test
  public void test1()  throws Throwable  {
      SSHFileStorage sSHFileStorage0 = new SSHFileStorage();
      // Undeclared exception!
      try {
        sSHFileStorage0.deleteFile("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 nu.staldal.lagoon.filestorage.SSHFileStorage.needPassword()Z: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      SSHFileStorage sSHFileStorage0 = new SSHFileStorage();
      boolean boolean0 = sSHFileStorage0.needPassword();
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 nu.staldal.lagoon.filestorage.SSHFileStorage$SSHOutputHandler.commit()V: root-Branch
   * 2 nu.staldal.lagoon.filestorage.SSHFileStorage$SSHOutputHandler.<init>(Lnu/staldal/lagoon/filestorage/SSHFileStorage;Ljava/lang/String;Ljava/lang/Process;Ljava/io/OutputStream;)V: root-Branch
   */
  @Test
  public void test4()  throws Throwable  {
      SSHFileStorage sSHFileStorage0 = new SSHFileStorage();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      PrintStream printStream0 = new PrintStream((OutputStream) byteArrayOutputStream0);
      SSHFileStorage.SSHOutputHandler sSHFileStorage_SSHOutputHandler0 = sSHFileStorage0.new SSHOutputHandler("$?6,H*;kPYhRz", (Process) null, (OutputStream) printStream0);
      // Undeclared exception!
      try {
        sSHFileStorage_SSHOutputHandler0.commit();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 nu.staldal.lagoon.filestorage.SSHFileStorage$SSHOutputHandler.discard()V: root-Branch
   * 2 nu.staldal.lagoon.filestorage.SSHFileStorage$SSHOutputHandler.<init>(Lnu/staldal/lagoon/filestorage/SSHFileStorage;Ljava/lang/String;Ljava/lang/Process;Ljava/io/OutputStream;)V: root-Branch
   */
  @Test
  public void test5()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      SSHFileStorage sSHFileStorage0 = new SSHFileStorage();
      SSHFileStorage.SSHOutputHandler sSHFileStorage_SSHOutputHandler0 = sSHFileStorage0.new SSHOutputHandler("ssh:/2/rm", (Process) null, (OutputStream) byteArrayOutputStream0);
      // Undeclared exception!
      try {
        sSHFileStorage_SSHOutputHandler0.discard();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 nu.staldal.lagoon.filestorage.SSHFileStorage.open(Ljava/lang/String;Lnu/staldal/lagoon/core/LagoonContext;Ljava/lang/String;)V: I6 Branch 5 IFGT L121 - true
   * 2 nu.staldal.lagoon.filestorage.SSHFileStorage.open(Ljava/lang/String;Lnu/staldal/lagoon/core/LagoonContext;Ljava/lang/String;)V: I27 Branch 6 IFGE L126 - false
   */
  @Test
  public void test6()  throws Throwable  {
      SSHFileStorage sSHFileStorage0 = new SSHFileStorage();
      try {
        sSHFileStorage0.open("ssh://!K[GH+?8&", (LagoonContext) null, "ssh://!K[GH+?8&");
        fail("Expecting exception: MalformedURLException");
      } catch(MalformedURLException e) {
        /*
         * ssh://!K[GH+?8&
         */
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 nu.staldal.lagoon.filestorage.SSHFileStorage.open(Ljava/lang/String;Lnu/staldal/lagoon/core/LagoonContext;Ljava/lang/String;)V: I6 Branch 5 IFGT L121 - false
   */
  @Test
  public void test7()  throws Throwable  {
      SSHFileStorage sSHFileStorage0 = new SSHFileStorage();
      try {
        sSHFileStorage0.open("", (LagoonContext) null, "");
        fail("Expecting exception: MalformedURLException");
      } catch(MalformedURLException e) {
        /*
         * 
         */
      }
  }

  //Test case number: 8
  /*
   * 4 covered goals:
   * 1 nu.staldal.lagoon.filestorage.SSHFileStorage.open(Ljava/lang/String;Lnu/staldal/lagoon/core/LagoonContext;Ljava/lang/String;)V: I27 Branch 6 IFGE L126 - true
   * 2 nu.staldal.lagoon.filestorage.SSHFileStorage.open(Ljava/lang/String;Lnu/staldal/lagoon/core/LagoonContext;Ljava/lang/String;)V: I49 Branch 7 IFGE L129 - false
   * 3 nu.staldal.lagoon.filestorage.SSHFileStorage.open(Ljava/lang/String;Lnu/staldal/lagoon/core/LagoonContext;Ljava/lang/String;)V: I77 Branch 8 IFGE L136 - false
   * 4 nu.staldal.lagoon.filestorage.SSHFileStorage.open(Ljava/lang/String;Lnu/staldal/lagoon/core/LagoonContext;Ljava/lang/String;)V: I6 Branch 5 IFGT L121 - true
   */
  @Test
  public void test8()  throws Throwable  {
      SSHFileStorage sSHFileStorage0 = new SSHFileStorage();
      // Undeclared exception!
      try {
        sSHFileStorage0.open("ssh://0m* sVf1K7@ee~", (LagoonContext) null, "ssh://0m* sVf1K7@ee~");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: -18
         */
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 nu.staldal.lagoon.filestorage.SSHFileStorage.createFile(Ljava/lang/String;)Lnu/staldal/lagoon/core/OutputHandler;: I25 Branch 18 IFGE L198 - true
   */
  @Test
  public void test9()  throws Throwable  {
      SSHFileStorage sSHFileStorage0 = new SSHFileStorage();
      // Undeclared exception!
      try {
        sSHFileStorage0.createFile("sshE//!K[GH+?8&");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 10
  /*
   * 6 covered goals:
   * 1 nu.staldal.lagoon.filestorage.SSHFileStorage.createFile(Ljava/lang/String;)Lnu/staldal/lagoon/core/OutputHandler;: I25 Branch 18 IFGE L198 - false
   * 2 nu.staldal.lagoon.filestorage.SSHFileStorage.<init>()V: root-Branch
   * 3 nu.staldal.lagoon.filestorage.SSHFileStorage.runSSH([Ljava/lang/String;)Ljava/lang/Process;: I6 Branch 1 IFLE L69 - true
   * 4 nu.staldal.lagoon.filestorage.SSHFileStorage.runSSH([Ljava/lang/String;)Ljava/lang/Process;: I56 Branch 2 IFLE L77 - true
   * 5 nu.staldal.lagoon.filestorage.SSHFileStorage.runSSH([Ljava/lang/String;)Ljava/lang/Process;: I76 Branch 3 IFLE L82 - true
   * 6 nu.staldal.lagoon.filestorage.SSHFileStorage.runSSH([Ljava/lang/String;)Ljava/lang/Process;: I92 Branch 4 IFLE L84 - true
   */
  @Test
  public void test10()  throws Throwable  {
      SSHFileStorage sSHFileStorage0 = new SSHFileStorage();
      // Undeclared exception!
      try {
        sSHFileStorage0.createFile("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
