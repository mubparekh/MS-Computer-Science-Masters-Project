/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.schemaspy.view;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import java.io.File;
import java.util.LinkedHashSet;
import java.util.Set;
import net.sourceforge.schemaspy.model.Database;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.util.LineWriter;
import net.sourceforge.schemaspy.view.HtmlRelationshipsPage;

public class HtmlRelationshipsPageEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 net.sourceforge.schemaspy.view.HtmlRelationshipsPage.isRelationshipsPage()Z: root-Branch
   * 2 net.sourceforge.schemaspy.view.HtmlRelationshipsPage.getInstance()Lnet/sourceforge/schemaspy/view/HtmlRelationshipsPage;: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      HtmlRelationshipsPage htmlRelationshipsPage0 = HtmlRelationshipsPage.getInstance();
      assertNotNull(htmlRelationshipsPage0);
      
      boolean boolean0 = htmlRelationshipsPage0.isRelationshipsPage();
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 net.sourceforge.schemaspy.view.HtmlRelationshipsPage.write(Lnet/sourceforge/schemaspy/model/Database;Ljava/io/File;Ljava/lang/String;ZZLjava/util/Set;Lnet/sourceforge/schemaspy/util/LineWriter;)Z: I8 Branch 1 IFNONNULL L58 - false
   * 2 net.sourceforge.schemaspy.view.HtmlRelationshipsPage.getInstance()Lnet/sourceforge/schemaspy/view/HtmlRelationshipsPage;: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      HtmlRelationshipsPage htmlRelationshipsPage0 = HtmlRelationshipsPage.getInstance();
      File file0 = new File("fOq", "fOq");
      LinkedHashSet<TableColumn> linkedHashSet0 = new LinkedHashSet<TableColumn>();
      // Undeclared exception!
      try {
        htmlRelationshipsPage0.write((Database) null, file0, "fOq", true, true, (Set<TableColumn>) linkedHashSet0, (LineWriter) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
