/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.schemaspy.view;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import java.io.File;
import java.io.IOException;
import java.util.LinkedList;
import java.util.List;
import net.sourceforge.schemaspy.model.Database;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.util.LineWriter;
import net.sourceforge.schemaspy.view.HtmlOrphansPage;

public class HtmlOrphansPageEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 net.sourceforge.schemaspy.view.HtmlOrphansPage.isOrphansPage()Z: root-Branch
   * 2 net.sourceforge.schemaspy.view.HtmlOrphansPage.getInstance()Lnet/sourceforge/schemaspy/view/HtmlOrphansPage;: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      HtmlOrphansPage htmlOrphansPage0 = HtmlOrphansPage.getInstance();
      assertNotNull(htmlOrphansPage0);
      
      boolean boolean0 = htmlOrphansPage0.isOrphansPage();
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 net.sourceforge.schemaspy.view.HtmlOrphansPage.write(Lnet/sourceforge/schemaspy/model/Database;Ljava/util/List;Ljava/io/File;Lnet/sourceforge/schemaspy/util/LineWriter;)Z: I8 Branch 1 IFNONNULL L57 - false
   * 2 net.sourceforge.schemaspy.view.HtmlOrphansPage.getInstance()Lnet/sourceforge/schemaspy/view/HtmlOrphansPage;: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      HtmlOrphansPage htmlOrphansPage0 = HtmlOrphansPage.getInstance();
      assertNotNull(htmlOrphansPage0);
      
      LinkedList<Table> linkedList0 = new LinkedList<Table>();
      boolean boolean0 = htmlOrphansPage0.write((Database) null, (List<Table>) linkedList0, (File) null, (LineWriter) null);
      assertEquals(false, boolean0);
  }
}
