/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.schemaspy.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import javax.imageio.metadata.IIOMetadataNode;
import javax.xml.transform.TransformerException;
import net.sourceforge.schemaspy.util.DOMUtil;
import net.sourceforge.schemaspy.util.LineWriter;
import org.w3c.dom.Node;

public class DOMUtilEvoSuiteTest {


  //Test case number: 0
  /*
   * 1 covered goal:
   * 1 net.sourceforge.schemaspy.util.DOMUtil.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      DOMUtil dOMUtil0 = new DOMUtil();
      assertNotNull(dOMUtil0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 net.sourceforge.schemaspy.util.DOMUtil.printDOM(Lorg/w3c/dom/Node;Lnet/sourceforge/schemaspy/util/LineWriter;)V: I41 Branch 1 IFNE L46 - true
   */
  @Test
  public void test1()  throws Throwable  {
      try {
        DOMUtil.printDOM((Node) null, (LineWriter) null);
        fail("Expecting exception: TransformerException");
      } catch(TransformerException e) {
        /*
         * Result object passed to ''{0}'' is invalid.
         */
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 net.sourceforge.schemaspy.util.DOMUtil.appendAttribute(Lorg/w3c/dom/Node;Ljava/lang/String;Ljava/lang/String;)V: I3 Branch 2 IFNULL L59 - true
   */
  @Test
  public void test2()  throws Throwable  {
      DOMUtil.appendAttribute((Node) null, (String) null, (String) null);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 net.sourceforge.schemaspy.util.DOMUtil.appendAttribute(Lorg/w3c/dom/Node;Ljava/lang/String;Ljava/lang/String;)V: I3 Branch 2 IFNULL L59 - false
   */
  @Test
  public void test3()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(":72<:}\"0/=\"b1HPU");
      // Undeclared exception!
      try {
        DOMUtil.appendAttribute((Node) iIOMetadataNode0, ":72<:}\"0/=\"b1HPU", ":72<:}\"0/=\"b1HPU");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
