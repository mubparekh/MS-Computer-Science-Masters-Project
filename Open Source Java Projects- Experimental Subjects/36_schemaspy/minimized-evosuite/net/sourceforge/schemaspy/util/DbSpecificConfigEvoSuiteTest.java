/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.schemaspy.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.util.DbSpecificConfig;

public class DbSpecificConfigEvoSuiteTest {


  //Test case number: 0
  /*
   * 13 covered goals:
   * 1 net.sourceforge.schemaspy.util.DbSpecificConfig.getOptions()Ljava/util/List;: root-Branch
   * 2 net.sourceforge.schemaspy.util.DbSpecificConfig.<init>(Ljava/lang/String;)V: root-Branch
   * 3 net.sourceforge.schemaspy.util.DbSpecificConfig.loadOptions(Ljava/util/Properties;)V: I19 Branch 1 IFEQ L66 - true
   * 4 net.sourceforge.schemaspy.util.DbSpecificConfig.loadOptions(Ljava/util/Properties;)V: I19 Branch 1 IFEQ L66 - false
   * 5 net.sourceforge.schemaspy.util.DbSpecificConfig.loadOptions(Ljava/util/Properties;)V: I30 Branch 2 IFLE L68 - true
   * 6 net.sourceforge.schemaspy.util.DbSpecificConfig.loadOptions(Ljava/util/Properties;)V: I30 Branch 2 IFLE L68 - false
   * 7 net.sourceforge.schemaspy.util.DbSpecificConfig.loadOptions(Ljava/util/Properties;)V: I41 Branch 3 IFLE L70 - true
   * 8 net.sourceforge.schemaspy.util.DbSpecificConfig.loadOptions(Ljava/util/Properties;)V: I41 Branch 3 IFLE L70 - false
   * 9 net.sourceforge.schemaspy.util.DbSpecificConfig.loadOptions(Ljava/util/Properties;)V: I50 Branch 4 IFEQ L73 - true
   * 10 net.sourceforge.schemaspy.util.DbSpecificConfig.loadOptions(Ljava/util/Properties;)V: I50 Branch 4 IFEQ L73 - false
   * 11 net.sourceforge.schemaspy.util.DbSpecificConfig.dumpUsage()V: I41 Branch 5 IFEQ L107 - true
   * 12 net.sourceforge.schemaspy.util.DbSpecificConfig.dumpUsage()V: I41 Branch 5 IFEQ L107 - false
   * 13 net.sourceforge.schemaspy.util.DbSpecificConfig.dumpUsage()V: I61 Branch 6 IFNULL L108 - false
   */
  @Test
  public void test0()  throws Throwable  {
      DbSpecificConfig dbSpecificConfig0 = new DbSpecificConfig("ora");
      dbSpecificConfig0.dumpUsage();
      assertEquals("Oracle with OCI8 Driver", dbSpecificConfig0.toString());
  }

  //Test case number: 2
  /*
   * 10 covered goals:
   * 1 net.sourceforge.schemaspy.util.DbSpecificConfig.getConfig()Lnet/sourceforge/schemaspy/Config;: root-Branch
   * 2 net.sourceforge.schemaspy.util.DbSpecificConfig.<init>(Ljava/lang/String;)V: root-Branch
   * 3 net.sourceforge.schemaspy.util.DbSpecificConfig.loadOptions(Ljava/util/Properties;)V: I19 Branch 1 IFEQ L66 - true
   * 4 net.sourceforge.schemaspy.util.DbSpecificConfig.loadOptions(Ljava/util/Properties;)V: I19 Branch 1 IFEQ L66 - false
   * 5 net.sourceforge.schemaspy.util.DbSpecificConfig.loadOptions(Ljava/util/Properties;)V: I30 Branch 2 IFLE L68 - true
   * 6 net.sourceforge.schemaspy.util.DbSpecificConfig.loadOptions(Ljava/util/Properties;)V: I30 Branch 2 IFLE L68 - false
   * 7 net.sourceforge.schemaspy.util.DbSpecificConfig.loadOptions(Ljava/util/Properties;)V: I41 Branch 3 IFLE L70 - true
   * 8 net.sourceforge.schemaspy.util.DbSpecificConfig.loadOptions(Ljava/util/Properties;)V: I41 Branch 3 IFLE L70 - false
   * 9 net.sourceforge.schemaspy.util.DbSpecificConfig.loadOptions(Ljava/util/Properties;)V: I50 Branch 4 IFEQ L73 - true
   * 10 net.sourceforge.schemaspy.util.DbSpecificConfig.loadOptions(Ljava/util/Properties;)V: I50 Branch 4 IFEQ L73 - false
   */
  @Test
  public void test2()  throws Throwable  {
      DbSpecificConfig dbSpecificConfig0 = new DbSpecificConfig("ora");
      Config config0 = dbSpecificConfig0.getConfig();
      assertEquals("schemaSpy.css", config0.getCss());
  }
}
