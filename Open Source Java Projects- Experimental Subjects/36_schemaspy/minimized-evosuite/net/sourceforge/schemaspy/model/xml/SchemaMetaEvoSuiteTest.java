/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.schemaspy.model.xml;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import net.sourceforge.schemaspy.model.InvalidConfigurationException;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;

public class SchemaMetaEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 net.sourceforge.schemaspy.model.xml.SchemaMeta.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: I30 Branch 1 IFEQ L58 - true
   * 2 net.sourceforge.schemaspy.model.xml.SchemaMeta.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: I124 Branch 5 IFNE L73 - false
   */
  @Test
  public void test0()  throws Throwable  {
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("/x\">rvQKCr3F<", "/x\">rvQKCr3F<", "/x\">rvQKCr3F<");
        fail("Expecting exception: InvalidConfigurationException");
      } catch(InvalidConfigurationException e) {
        /*
         * Specified meta file \"/x\">rvQKCr3F<\" does not exist
         */
      }
  }

  //Test case number: 1
  /*
   * 4 covered goals:
   * 1 net.sourceforge.schemaspy.model.xml.SchemaMeta.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: I30 Branch 1 IFEQ L58 - false
   * 2 net.sourceforge.schemaspy.model.xml.SchemaMeta.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: I37 Branch 2 IFNONNULL L59 - true
   * 3 net.sourceforge.schemaspy.model.xml.SchemaMeta.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: I60 Branch 3 IFNE L62 - false
   * 4 net.sourceforge.schemaspy.model.xml.SchemaMeta.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: I65 Branch 4 IFEQ L63 - true
   */
  @Test
  public void test1()  throws Throwable  {
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta(".", ".", ".");
        fail("Expecting exception: InvalidConfigurationException");
      } catch(InvalidConfigurationException e) {
        /*
         * Meta directory \".\" must contain a file named \"..meta.xml\"
         */
      }
  }

  //Test case number: 2
  /*
   * 4 covered goals:
   * 1 net.sourceforge.schemaspy.model.xml.SchemaMeta.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: I37 Branch 2 IFNONNULL L59 - false
   * 2 net.sourceforge.schemaspy.model.xml.SchemaMeta.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: I30 Branch 1 IFEQ L58 - false
   * 3 net.sourceforge.schemaspy.model.xml.SchemaMeta.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: I60 Branch 3 IFNE L62 - false
   * 4 net.sourceforge.schemaspy.model.xml.SchemaMeta.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: I65 Branch 4 IFEQ L63 - true
   */
  @Test
  public void test2()  throws Throwable  {
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("/", (String) null, (String) null);
        fail("Expecting exception: InvalidConfigurationException");
      } catch(InvalidConfigurationException e) {
        /*
         * Meta directory \"/\" must contain a file named \"null.meta.xml\"
         */
      }
  }
}
