/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.schemaspy.view;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import java.io.IOException;
import java.util.Collection;
import java.util.LinkedList;
import java.util.TreeSet;
import net.sourceforge.schemaspy.model.Database;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.util.LineWriter;
import net.sourceforge.schemaspy.view.DotFormatter;
import net.sourceforge.schemaspy.view.WriteStats;

public class DotFormatterEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 net.sourceforge.schemaspy.view.DotFormatter.writeOrphan(Lnet/sourceforge/schemaspy/model/Table;Lnet/sourceforge/schemaspy/util/LineWriter;)V: root-Branch
   * 2 net.sourceforge.schemaspy.view.DotFormatter.getInstance()Lnet/sourceforge/schemaspy/view/DotFormatter;: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      DotFormatter dotFormatter0 = DotFormatter.getInstance();
      // Undeclared exception!
      try {
        dotFormatter0.writeOrphan((Table) null, (LineWriter) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 net.sourceforge.schemaspy.view.DotFormatter.writeAllRelationships(Lnet/sourceforge/schemaspy/model/Table;ZLnet/sourceforge/schemaspy/view/WriteStats;Lnet/sourceforge/schemaspy/util/LineWriter;)V: root-Branch
   * 2 net.sourceforge.schemaspy.view.DotFormatter.writeRelationships(Lnet/sourceforge/schemaspy/model/Table;ZLnet/sourceforge/schemaspy/view/WriteStats;ZLnet/sourceforge/schemaspy/util/LineWriter;)Ljava/util/Set;: I19 Branch 1 IFEQ L85 - false
   */
  @Test
  public void test1()  throws Throwable  {
      DotFormatter dotFormatter0 = DotFormatter.getInstance();
      // Undeclared exception!
      try {
        dotFormatter0.writeAllRelationships((Table) null, true, (WriteStats) null, (LineWriter) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 net.sourceforge.schemaspy.view.DotFormatter.writeRealRelationships(Lnet/sourceforge/schemaspy/model/Table;ZLnet/sourceforge/schemaspy/view/WriteStats;Lnet/sourceforge/schemaspy/util/LineWriter;)Ljava/util/Set;: root-Branch
   * 2 net.sourceforge.schemaspy.view.DotFormatter.writeRelationships(Lnet/sourceforge/schemaspy/model/Table;ZLnet/sourceforge/schemaspy/view/WriteStats;ZLnet/sourceforge/schemaspy/util/LineWriter;)Ljava/util/Set;: I19 Branch 1 IFEQ L85 - true
   * 3 net.sourceforge.schemaspy.view.DotFormatter.writeRelationships(Lnet/sourceforge/schemaspy/model/Table;ZLnet/sourceforge/schemaspy/view/WriteStats;ZLnet/sourceforge/schemaspy/util/LineWriter;)Ljava/util/Set;: I24 Branch 2 IFEQ L85 - true
   */
  @Test
  public void test2()  throws Throwable  {
      DotFormatter dotFormatter0 = DotFormatter.getInstance();
      LinkedList<Table> linkedList0 = new LinkedList<Table>();
      WriteStats writeStats0 = new WriteStats((Collection<Table>) linkedList0);
      // Undeclared exception!
      try {
        dotFormatter0.writeRealRelationships((Table) null, false, writeStats0, (LineWriter) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 3
  /*
   * 4 covered goals:
   * 1 net.sourceforge.schemaspy.view.DotFormatter.writeRealRelationships(Lnet/sourceforge/schemaspy/model/Database;Ljava/util/Collection;ZZLnet/sourceforge/schemaspy/view/WriteStats;Lnet/sourceforge/schemaspy/util/LineWriter;)V: root-Branch
   * 2 net.sourceforge.schemaspy.view.DotFormatter.writeRelationships(Lnet/sourceforge/schemaspy/model/Database;Ljava/util/Collection;ZZZLnet/sourceforge/schemaspy/view/WriteStats;Lnet/sourceforge/schemaspy/util/LineWriter;)Z: I7 Branch 47 IFEQ L273 - true
   * 3 net.sourceforge.schemaspy.view.DotFormatter.writeRelationships(Lnet/sourceforge/schemaspy/model/Database;Ljava/util/Collection;ZZZLnet/sourceforge/schemaspy/view/WriteStats;Lnet/sourceforge/schemaspy/util/LineWriter;)Z: I33 Branch 49 IFEQ L277 - true
   * 4 net.sourceforge.schemaspy.view.DotFormatter.writeRelationships(Lnet/sourceforge/schemaspy/model/Database;Ljava/util/Collection;ZZZLnet/sourceforge/schemaspy/view/WriteStats;Lnet/sourceforge/schemaspy/util/LineWriter;)Z: I53 Branch 51 IFEQ L283 - true
   */
  @Test
  public void test3()  throws Throwable  {
      DotFormatter dotFormatter0 = DotFormatter.getInstance();
      LinkedList<Table> linkedList0 = new LinkedList<Table>();
      // Undeclared exception!
      try {
        dotFormatter0.writeRealRelationships((Database) null, (Collection<Table>) linkedList0, false, false, (WriteStats) null, (LineWriter) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 net.sourceforge.schemaspy.view.DotFormatter.writeRelationships(Lnet/sourceforge/schemaspy/model/Table;ZLnet/sourceforge/schemaspy/view/WriteStats;ZLnet/sourceforge/schemaspy/util/LineWriter;)Ljava/util/Set;: I24 Branch 2 IFEQ L85 - false
   * 2 net.sourceforge.schemaspy.view.DotFormatter.writeRealRelationships(Lnet/sourceforge/schemaspy/model/Table;ZLnet/sourceforge/schemaspy/view/WriteStats;Lnet/sourceforge/schemaspy/util/LineWriter;)Ljava/util/Set;: root-Branch
   * 3 net.sourceforge.schemaspy.view.DotFormatter.writeRelationships(Lnet/sourceforge/schemaspy/model/Table;ZLnet/sourceforge/schemaspy/view/WriteStats;ZLnet/sourceforge/schemaspy/util/LineWriter;)Ljava/util/Set;: I19 Branch 1 IFEQ L85 - true
   */
  @Test
  public void test4()  throws Throwable  {
      DotFormatter dotFormatter0 = DotFormatter.getInstance();
      TreeSet<Table> treeSet0 = new TreeSet<Table>();
      WriteStats writeStats0 = new WriteStats((Collection<Table>) treeSet0);
      // Undeclared exception!
      try {
        dotFormatter0.writeRealRelationships((Table) null, true, writeStats0, (LineWriter) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 5
  /*
   * 6 covered goals:
   * 1 net.sourceforge.schemaspy.view.DotFormatter.writeRelationships(Lnet/sourceforge/schemaspy/model/Database;Ljava/util/Collection;ZZZLnet/sourceforge/schemaspy/view/WriteStats;Lnet/sourceforge/schemaspy/util/LineWriter;)Z: I7 Branch 47 IFEQ L273 - false
   * 2 net.sourceforge.schemaspy.view.DotFormatter.writeRelationships(Lnet/sourceforge/schemaspy/model/Database;Ljava/util/Collection;ZZZLnet/sourceforge/schemaspy/view/WriteStats;Lnet/sourceforge/schemaspy/util/LineWriter;)Z: I11 Branch 48 IFNE L273 - true
   * 3 net.sourceforge.schemaspy.view.DotFormatter.writeRelationships(Lnet/sourceforge/schemaspy/model/Database;Ljava/util/Collection;ZZZLnet/sourceforge/schemaspy/view/WriteStats;Lnet/sourceforge/schemaspy/util/LineWriter;)Z: I53 Branch 51 IFEQ L283 - false
   * 4 net.sourceforge.schemaspy.view.DotFormatter.getInstance()Lnet/sourceforge/schemaspy/view/DotFormatter;: root-Branch
   * 5 net.sourceforge.schemaspy.view.DotFormatter.writeRealRelationships(Lnet/sourceforge/schemaspy/model/Database;Ljava/util/Collection;ZZLnet/sourceforge/schemaspy/view/WriteStats;Lnet/sourceforge/schemaspy/util/LineWriter;)V: root-Branch
   * 6 net.sourceforge.schemaspy.view.DotFormatter.writeRelationships(Lnet/sourceforge/schemaspy/model/Database;Ljava/util/Collection;ZZZLnet/sourceforge/schemaspy/view/WriteStats;Lnet/sourceforge/schemaspy/util/LineWriter;)Z: I33 Branch 49 IFEQ L277 - true
   */
  @Test
  public void test5()  throws Throwable  {
      DotFormatter dotFormatter0 = DotFormatter.getInstance();
      LinkedList<Table> linkedList0 = new LinkedList<Table>();
      // Undeclared exception!
      try {
        dotFormatter0.writeRealRelationships((Database) null, (Collection<Table>) linkedList0, true, true, (WriteStats) null, (LineWriter) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
